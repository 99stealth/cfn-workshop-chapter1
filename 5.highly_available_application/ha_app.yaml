Parameters:
  SshKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Choose a SSH key from the list of your keys
    ConstraintDescription: This field cannot be empty
  SshIpAllow:
    Type: String
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([1-9]|[1-2][0-9]|3[0-2])$
  DbName:
    Type: String
    Default: cfn_workshop
  DbPort:
    Default: 3306
    Description: TCP/IP port for the database
    Type: Number
    MinValue: 1150
    MaxValue: 65535
  DbUser:
    Type: String
  DbPasswd:
    NoEcho: true
    Description: The database admin account password
    Type: String
    MinLength: 1
    MaxLength: 41
    AllowedPattern: ^[a-zA-Z0-9]*$
  DbHost:
    Type: String

Mappings:
  RegionMap:
    us-east-1:
      AMIID: ami-035b3c7efe6d061d5
    us-east-2:
      AMIID: ami-02f706d959cedf892
    us-west-1:
      AMIID: ami-0fcdcdb074d2bac5f
    us-west-2:
      AMIID: ami-0f2176987ee50226e
    eu-west-1:
      AMIID: ami-0862aabda3fb488b5
    eu-west-2:
      AMIID: ami-0bdfa1adc3878cd23
    eu-west-3:
      AMIID: ami-05b93cd5a1b552734
    eu-central-1:
      AMIID: ami-026d3b3672c6e7b66
    eu-north-1:
      AMIID: ami-8c169ef2
    ap-northeast-2:
      AMIID: ami-0be3e6f84d3b968cd
    ap-northeast-1:
      AMIID: ami-04b2d1589ab1d972c
    ap-southeast-2:
      AMIID: ami-075caa3491def750b
    ap-southeast-1:
      AMIID: ami-0fb6b6f9e81056553
    ca-central-1:
      AMIID: ami-0a67d15f2858e33cb
    ap-south-1:
      AMIID: ami-0b99c7725b9484f9e
    sa-east-1:
      AMIID: ami-0bb96001cf2299257

Resources:
# < EC2 Instance Security Groups
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 instances security group
      GroupName: allow-access-to-ec2-instances
  EC2AllowSSH:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupName: !Ref EC2SecurityGroup
      Description: Allows SSH to instance from defined IP address
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Ref SshIpAllow
# EC2 Instance Security Group >

# < EC2 Instances
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - AMIID
      KeyName: !Ref SshKey
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            yum install git golang -y
            if [ $? == 0 ]; then
                echo "Packages installed successfully"
            else
                echo "Package installation is failed"
            fi
            git clone https://github.com/99stealth/cfn-workshop-backend.git
            if [ $? == 0 ]; then
                echo "Repository cloned successfully"
            else
                echo "Repository clone is failed"
            fi
            cd cfn-workshop-backend

            echo dbName=${DbName} > .env
            echo dbPort=${DbPort} >> .env
            echo dbUser=${DbUser} >> .env
            echo dbPasswd=${DbPasswd} >> .env
            echo dbHost=${DbHost} >> .env

            export GOPATH=/cfn-workshop-backend
            export GOCACHE=/cfn-workshop-backend
            go get github.com/go-sql-driver/mysql
            go get github.com/gorilla/mux
            go build -o cfn-workshop-backend-server
            if [ $? == 0 ]; then
                echo "Application has been successfully built"
            else
                echo "Application build is failed"
            fi
            ./cfn-workshop-backend-server &
# EC2 Instances >